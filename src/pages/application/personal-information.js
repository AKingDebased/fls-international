import React, { Fragment } from 'react';
import { Link } from 'gatsby';

import Layout from '../../components/Layout';
import Section from '../../components/section/Section';

export const PersonalInformationTemplate = () => {
	// TODO: This is a critical page that needs to be generated by the CMS. It should be possible to dynamically generate pages like this entirely through the CMS
	return (
		<Fragment>
			<Section
				sectionClasses={['section']}
				containerClasses={['container']}
			>
				<div className="columns is-multiline is-variable is-5">
					<div className="column is-7">
						<h3 class="fls__post-title">Personal Information</h3>

						<div className="columns is-multiline">
							<div className="column is-half">
								<div class="field">
									<label class="label">First Name</label>
									<div class="control">
										<input
											class="input fls__base-input"
											type="text"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>
							<div className="column is-half">
								<div class="field">
									<label class="label">Last Name</label>
									<div class="control">
										<input
											class="input fls__base-input"
											type="text"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>
							<div className="column is-half">
								<div class="field">
									<label class="label">Email Address</label>
									<div class="control">
										<input
											class="input fls__base-input"
											type="text"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>
							<div className="column is-half">
								<div class="field">
									<label class="label">Phone Number</label>
									<div class="control">
										<input
											class="input fls__base-input"
											type="text"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>
							<div className="column is-half">
								<div class="field">
									<label class="label">
										Create a Password
									</label>
									<div class="control">
										<input
											class="input fls__base-input"
											type="password"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>
							<div className="column is-half">
								<div class="field">
									<label class="label">
										Confirm Password
									</label>
									<div class="control">
										<input
											class="input fls__base-input"
											type="password"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div className="column is-5 column--alternate">
						<h3 class="fls__post-title">Application Program</h3>

						<div className="fls__alternating-items">
							<div className="fls__alternating-item">
								<span>Start Date</span>
								<span>Aug 24, 2020</span>
							</div>
							<div className="fls__alternating-item">
								<span>Your Duration</span>
								<span>1 week</span>
							</div>
							<div className="fls__alternating-item">
								<span>Location</span>
								<span>Citrus College</span>
							</div>
							<div className="fls__alternating-item">
								<span>Your Housing</span>
								<span>Homestay Single Room</span>
							</div>
							<div className="fls__alternating-item">
								<span>Your Program</span>
								<span>TOEFL Preparation</span>
							</div>
							<div className="fls__alternating-item">
								<span>Application Fee</span>
								<span>$150</span>
							</div>
						</div>
					</div>

					<div className="column is-5 is-offset-7 column--no-padding">
						<Link
							to="/application/billing-payment"
							className="fls__button"
						>
							Apply Now
						</Link>
					</div>
				</div>
			</Section>
		</Fragment>
	);
};

const PersonalInformationPage = ({ data }) => {
	// const { frontmatter } = data.markdownRemark;

	// TODO: Page title needs to change as user progress through application
	return (
		<Layout
			isScrolled={true}
			hasNavHero={true}
			hasNavButtons={false}
			pageTitle={'Personal Information'}
		>
			<PersonalInformationTemplate />
		</Layout>
	);
};

export default PersonalInformationPage;

// TODO: Here, all the individual fields are specified.
// Is there a way to just say 'get all fields'?
// export const pageQuery = graphql`
// 	query {
// 		markdownRemark {
// 			frontmatter {
// 				program_cards {
// 					card_description
// 					card_image
// 					card_title
// 				}
// 			}
// 		}
// 	}
// `;
