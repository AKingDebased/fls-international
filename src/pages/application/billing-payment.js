import React, { Fragment } from 'react';
import { Link } from 'gatsby';
import ReactFlagsSelect from 'react-flags-select';
import { loadStripe } from '@stripe/stripe-js';
import {
	CardElement,
	Elements,
	useStripe,
	useElements,
} from '@stripe/react-stripe-js';

import Layout from 'src/components/Layout';
import Section from 'src/components/section/Section';
import 'react-flags-select/scss/react-flags-select.scss';

import paymentOptionsImg from 'src/img/stripe-payments.png';

export const BillingPaymentTemplate = () => {
	const stripePromise = loadStripe('pk_test_6pRNASCoBOKtIshFeQd4XMUh');

	// TODO: This is a critical page that needs to be generated by the CMS. It should be possible to dynamically generate pages like this entirely through the CMS
	return (
		<Fragment>
			<Section
				sectionClasses={['section']}
				containerClasses={['container']}
			>
				<div className="columns is-multiline is-variable is-5">
					<div className="column is-7">
						<h3 className="fls__post-title">Billing Address</h3>

						<div className="columns is-multiline">
							<div className="column is-half">
								<div className="field">
									<label className="label">First Name</label>

									<div className="control">
										<input
											className="input fls__base-input"
											type="text"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>

							<div className="column is-half">
								<div className="field">
									<label className="label">Last Name</label>

									<div className="control">
										<input
											className="input fls__base-input"
											type="text"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>

							<div className="column is-full">
								<div className="field">
									<label className="label">Address</label>

									<div className="control">
										<input
											className="input fls__base-input"
											type="text"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>

							<div className="column is-half">
								<div className="field">
									<label className="label">City</label>

									<div className="control">
										<input
											className="input fls__base-input"
											type="text"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>

							<div className="column is-half">
								<div className="field">
									<label className="label">
										State/Province
									</label>

									<div className="control">
										<input
											className="input fls__base-input"
											type="text"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>

							<div className="column is-half">
								<div className="field">
									<label className="label">
										Zip/Postal Code
									</label>

									<div className="control">
										<input
											className="input fls__base-input"
											type="text"
											placeholder="Text input"
										/>
									</div>
								</div>
							</div>

							<div className="column is-half">
								<div className="field">
									{/* TODO: figure out this country input  */}
									<label className="label">Country</label>

									<div className="control">
										<ReactFlagsSelect
											defaultCountry="US"
											searchable={true}
										/>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div className="column is-5 column--alternate">
						<h3 className="fls__post-title">Application Program</h3>

						<div className="fls__alternating-items">
							<div className="fls__alternating-item">
								<span>Start Date</span>
								<span>Aug 24, 2020</span>
							</div>
							<div className="fls__alternating-item">
								<span>Your Duration</span>
								<span>1 week</span>
							</div>
							<div className="fls__alternating-item">
								<span>Location</span>
								<span>Citrus College</span>
							</div>
							<div className="fls__alternating-item">
								<span>Your Housing</span>
								<span>Homestay Single Room</span>
							</div>
							<div className="fls__alternating-item">
								<span>Your Program</span>
								<span>TOEFL Preparation</span>
							</div>
							<div className="fls__alternating-item">
								<span>Application Fee</span>
								<span>$150</span>
							</div>
						</div>
					</div>

					<div className="column is-7">
						<h3 className="fls__post-title">Payment Information</h3>

						<div className="fls__payment-container">
							<div className="fls__payment-label">
								<span className="fls__payment-label-copy">
									Credit or Debit Card Payment
								</span>
								<img
									src={paymentOptionsImg}
									alt="payment options"
								/>
							</div>
							<Elements stripe={stripePromise}>
								<CardElement className="fls__base-input fls__base-input--payment" />
							</Elements>
						</div>

						<Link
							to="application/billing-payment"
							className="fls__button"
						>
							Proceed
						</Link>
					</div>
				</div>
			</Section>
		</Fragment>
	);
};

const BillingPaymentPage = ({ data }) => {
	// const { frontmatter } = data.markdownRemark;

	// TODO: Page title needs to change as user progress through application
	return (
		<Layout
			isScrolled={true}
			hasNavHero={true}
			hasNavButtons={false}
			pageTitle={'Billing & Payment'}
		>
			<BillingPaymentTemplate />
		</Layout>
	);
};

export default BillingPaymentPage;

// TODO: Here, all the individual fields are specified.
// Is there a way to just say 'get all fields'?
// export const pageQuery = graphql`
// 	query {
// 		markdownRemark {
// 			frontmatter {
// 				program_cards {
// 					card_description
// 					card_image
// 					card_title
// 				}
// 			}
// 		}
// 	}
// `;
